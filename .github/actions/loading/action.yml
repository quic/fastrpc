---
name: Load Parameters
description: Load parameters for the build job

outputs:
  build_matrix:
    description: Build matrix
    value: ${{ steps.set-matrix.outputs.build_matrix }}

  full_matrix:
    description: full matrix containing lava devails
    value: ${{ steps.set-matrix.outputs.full_matrix }}

runs:
  using: "composite"
  steps:
    - name: Set Build Matrix
      id: set-matrix
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const path = require('path');
          const filePath = path.join(process.env.GITHUB_WORKSPACE, 'ci', 'MACHINES.json');
          let file;
          try {
            if (!fs.existsSync(filePath)) {
              core.setFailed(`MACHINES.json not found at ${filePath}`);
              return;
            }
            file = JSON.parse(fs.readFileSync(filePath, 'utf-8'));
          } catch (err) {
            core.setFailed(`Failed to load or parse MACHINES.json: ${err.message}`);
            return;
          }
          // Slim matrix for better job visibility
          const slim_matrix = Object.entries(file).map(([machine, [firmware]]) => ({ machine, firmware }));
          core.setOutput('build_matrix', JSON.stringify(slim_matrix));
          console.log(slim_matrix);

          // Full matrix to pass to test jobs
          const complete_matrix = Object.entries(file).map(([machine, [firmware, lavaname]]) => ({
            machine,
            firmware,
            lavaname
          }));
          core.setOutput('full_matrix', JSON.stringify(complete_matrix));
          console.log(complete_matrix);
